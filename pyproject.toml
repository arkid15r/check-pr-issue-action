[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "check-pr-issue-action"
version = "0.1.0"
description = "GitHub Action to validate PR-issue relationships"
authors = [{ name = "arkid15r", email = "arkid15r@users.noreply.github.com" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = ["PyGithub==1.59.1"]

[project.scripts]
check-pr-issue-action = "check_pr_issue_action.main:main"

[tool.poetry.group.dev.dependencies]
pytest = "7.4.3"
pytest-cov = "4.1.0"
pre-commit = "3.5.0"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.isort]
known-first-party = ["config", "validator", "pr_manager"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "venv/*", ".venv/*", "*/site-packages/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ruff = "0.1.6"
